<template>
  <div class="dashboard">
    <div class="container py-5">
      <div class="row g-4">
        <!-- Welcome Card -->
        <div class="col-12" v-motion-slide-visible-once-bottom>
          <div class="welcome-card" :class="{ 'skeleton-loading': loading }">
            <div class="content">
              <template v-if="!loading">
                <div class="welcome-header">
                  <div class="user-info">
                    <h1>Welcome Back, <span class="text-primary">{{ userName }}</span></h1>
                    <p class="lead mb-0">Manage your enrollments and activities from your personal dashboard.</p>
                    <div class="role-badge mt-3">
                      <i class="fas fa-user-tag me-2"></i>
                      {{ userRole }}
                    </div>
                    <button 
                      v-if="['student', 'parent'].includes(userRole?.toLowerCase())"
                      class="change-password-btn ms-3 mt-3 pulse"
                      @click="showChangePasswordModal = true"
                      title="Change Password"
                    >
                      <i class="fas fa-key me-2"></i>
                      Change Password
                    </button>
                  </div>
                  <div class="avatar">
                    {{ userInitials }}
                  </div>
                </div>
              </template>
              <template v-else>
                <div class="skeleton-text skeleton-title"></div>
                <div class="skeleton-text skeleton-subtitle"></div>
                <div class="skeleton-badge mt-3"></div>
              </template>
            </div>
          </div>
        </div>

        <!-- Quick Stats -->
        <div class="col-md-4" v-motion-slide-visible-once-bottom>
          <div class="stat-card" :class="{ 'skeleton-loading': loading }">
            <template v-if="!loading">
              <div class="stat-icon">
                <i class="fas fa-book-reader"></i>
              </div>
              <div class="stat-content">
                <h3>Students</h3>
                <p class="stat-number">2</p>
                <p class="stat-label">Active Enrollments</p>
              </div>
            </template>
            <template v-else>
              <div class="skeleton-icon"></div>
              <div class="stat-content">
                <div class="skeleton-text skeleton-sm"></div>
                <div class="skeleton-text skeleton-lg"></div>
                <div class="skeleton-text skeleton-sm"></div>
              </div>
            </template>
          </div>
        </div>

        <div class="col-md-4" v-motion-slide-visible-once-bottom>
          <div class="stat-card" :class="{ 'skeleton-loading': loading }">
            <template v-if="!loading">
              <div class="stat-icon">
                <i class="fas fa-calendar-check"></i>
              </div>
              <div class="stat-content">
                <h3>Teachers</h3>
                <p class="stat-number">3</p>
                <p class="stat-label">Active Teachers</p>
              </div>
            </template>
            <template v-else>
              <div class="skeleton-icon"></div>
              <div class="stat-content">
                <div class="skeleton-text skeleton-sm"></div>
                <div class="skeleton-text skeleton-lg"></div>
                <div class="skeleton-text skeleton-sm"></div>
              </div>
            </template>
          </div>
        </div>

        <div class="col-md-4" v-motion-slide-visible-once-bottom>
          <div class="stat-card" :class="{ 'skeleton-loading': loading }">
            <template v-if="!loading">
              <div class="stat-icon">
                <i class="fas fa-clock"></i>
              </div>
              <div class="stat-content">
                <h3>Schedule</h3>
                <p class="stat-number">5</p>
                <p class="stat-label">Upcoming Sessions</p>
              </div>
            </template>
            <template v-else>
              <div class="skeleton-icon"></div>
              <div class="stat-content">
                <div class="skeleton-text skeleton-sm"></div>
                <div class="skeleton-text skeleton-lg"></div>
                <div class="skeleton-text skeleton-sm"></div>
              </div>
            </template>
          </div>
        </div>

        <!-- Recent Activities -->
        <div 
          :class="['student', 'parent'].includes(userRole?.toLowerCase()) ? 'col-lg-12' : 'col-lg-8'" 
          v-motion-slide-visible-once-bottom
        >
          <div class="dashboard-card" :class="{ 'skeleton-loading': loading }">
            <div class="card-header">
              <template v-if="!loading">
                <h2>Recent Activities</h2>
                <button class="btn btn-outline-primary btn-sm">View All</button>
              </template>
              <template v-else>
                <div class="skeleton-text skeleton-md"></div>
                <div class="skeleton-button"></div>
              </template>
            </div>
            <div class="activity-list">
              <template v-if="!loading">
                <div class="activity-item">
                  <div class="activity-icon bg-success-light">
                    <i class="fas fa-check-circle text-success"></i>
                  </div>
                  <div class="activity-content">
                    <h4>Program Enrollment Confirmed</h4>
                    <p>Your enrollment in "Early Learning Program" has been confirmed</p>
                    <span class="activity-time">2 hours ago</span>
                  </div>
                </div>
                <div class="activity-item">
                  <div class="activity-icon bg-info-light">
                    <i class="fas fa-info-circle text-info"></i>
                  </div>
                  <div class="activity-content">
                    <h4>New Schedule Update</h4>
                    <p>Swimming class schedule has been updated for next week</p>
                    <span class="activity-time">1 day ago</span>
                  </div>
                </div>
                <div class="activity-item">
                  <div class="activity-icon bg-warning-light">
                    <i class="fas fa-bell text-warning"></i>
                  </div>
                  <div class="activity-content">
                    <h4>Payment Reminder</h4>
                    <p>Upcoming payment due for "Music Classes"</p>
                    <span class="activity-time">2 days ago</span>
                  </div>
                </div>
              </template>
              <template v-else>
                <div class="activity-item" v-for="n in 3" :key="n">
                  <div class="skeleton-activity-icon"></div>
                  <div class="activity-content">
                    <div class="skeleton-text skeleton-md"></div>
                    <div class="skeleton-text skeleton-lg"></div>
                    <div class="skeleton-text skeleton-sm"></div>
                  </div>
                </div>
              </template>
            </div>
          </div>
        </div>

        <!-- Quick Actions -->
        <div 
          v-if="!['student', 'parent'].includes(userRole?.toLowerCase())" 
          class="col-lg-4" 
          v-motion-slide-visible-once-bottom
        >
          <div class="dashboard-card" :class="{ 'skeleton-loading': loading }">
            <div class="card-header">
              <template v-if="!loading">
                <h2>Quick Actions</h2>
              </template>
              <template v-else>
                <div class="skeleton-text skeleton-md"></div>
              </template>
            </div>
            <div class="quick-actions">
              <template v-if="!loading">
                <button 
                  v-if="userRole?.toLowerCase() === 'registrar' || userRole?.toLowerCase() === 'admin' || userRole?.toLowerCase() === 'headmaster'"
                  class="action-button" 
                  @click="showAddUserModal = true"
                >
                  <i class="fas fa-plus-circle"></i>
                  <span>New Enrollment</span>
                </button>
                
                <button 
                  v-if="['accountant', 'admin', 'headmaster'].includes(userRole?.toLowerCase())"
                  class="action-button"
                >
                  <i class="fas fa-file-invoice"></i>
                  <span>Fees and Admission Payments</span>
                </button>

                <router-link 
                  v-if="['accountant', 'admin', 'headmaster'].includes(userRole?.toLowerCase())"
                  to="/accountants"
                  class="action-button"
                >
                  <i class="fas fa-file-invoice"></i>
                  <span>Fees and Admission Payments</span>
                </router-link>

                <button 
                  class="action-button"
                  @click="showChangePasswordModal = true"
                >
                  <i class="fas fa-key"></i>
                  <span>Change Password</span>
                </button>

                <router-link 
                  v-if="['teacher', 'admin', 'headmaster'].includes(userRole?.toLowerCase())"
                  to="/teachers"
                  class="action-button"
                >
                  <i class="fas fa-chalkboard"></i>
                  <span>My Classroom</span>
                </router-link>
              </template>
              <template v-else>
                <div class="skeleton-action-button" v-for="n in 4" :key="n"></div>
              </template>
            </div>
          </div>
        </div>
      </div>
    </div>
    <AddUserModal 
      v-model="showAddUserModal"
      @user-added="() => showAddUserModal = false"
    />
    <ChangePasswordModal
      v-model="showChangePasswordModal"
    />
  </div>
</template>

<script setup lang="ts">
import { computed, ref, onMounted, watch } from 'vue'
import { useAuthStore } from '@/store/auth'
import AddUserModal from '@/components/AddUserModal.vue'
import ChangePasswordModal from '@/components/ChangePasswordModal.vue'

const authStore = useAuthStore()
const loading = ref(true)
const showAddUserModal = ref(false)
const showChangePasswordModal = ref(false)

// Debug watcher
watch(showChangePasswordModal, (newVal) => {
  console.log('Change password modal state:', newVal)
})

const userName = computed(() => {
  // First try to get the name from userRole
  if (authStore.userRole?.username) {
    return authStore.userRole.username
  }
  // Fallback to email if no username is set
  const email = authStore.user?.email || ''
  return email.split('@')[0]
})
const userRole = computed(() => authStore.userRoleDisplay)

const userInitials = computed(() => {
  const name = userName.value;
  if (!name) return '';
  
  // Split by spaces and get initials
  const words = name.split(' ');
  if (words.length >= 2) {
    return (words[0][0] + words[1][0]).toUpperCase();
  }
  // If single word, take first two letters
  return name.slice(0, 2).toUpperCase();
})

onMounted(() => {
  // Simulate loading delay
  setTimeout(() => {
    loading.value = false
  }, 1000)
})
</script>

<style lang="scss" scoped>
.welcome-card {
  background: linear-gradient(135deg, #42b883 0%, #3aa876 100%);
  border-radius: 1rem;
  padding: 2rem;
  color: white;
  position: relative;
  overflow: hidden;
  margin-bottom: 1rem;
  box-shadow: 0 4px 15px rgba(66, 184, 131, 0.2);

  .content {
    position: relative;
    z-index: 1;
  }

  .decoration {
    position: absolute;
    right: 2rem;
    top: 50%;
    transform: translateY(-50%);
    font-size: 4rem;
    opacity: 0.2;
  }

  h1 {
    margin-bottom: 0.5rem;
    font-weight: 600;

    .text-primary {
      color: #e0fff0 !important;
    }
  }

  .role-badge {
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1rem;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 2rem;
    font-weight: 500;
    font-size: 0.9rem;
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    color: #e0fff0;
    
    i {
      font-size: 1rem;
    }
  }
}

.stat-card {
  background: white;
  border-radius: 1rem;
  padding: 1.5rem;
  height: 100%;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  transition: transform 0.3s ease;

  &:hover {
    transform: translateY(-5px);
  }

  .stat-icon {
    font-size: 2rem;
    color: #42b883;
    margin-bottom: 1rem;
  }

  .stat-content {
    h3 {
      font-size: 1.1rem;
      color: #666;
      margin-bottom: 0.5rem;
    }

    .stat-number {
      font-size: 2rem;
      font-weight: 600;
      color: #2c3e50;
      margin-bottom: 0.25rem;
    }

    .stat-label {
      color: #666;
      font-size: 0.9rem;
      margin: 0;
    }
  }
}

.dashboard-card {
  background: white;
  border-radius: 1rem;
  height: 100%;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);

  .card-header {
    padding: 1.5rem;
    border-bottom: 1px solid #eee;
    display: flex;
    justify-content: space-between;
    align-items: center;

    h2 {
      font-size: 1.25rem;
      margin: 0;
      color: #2c3e50;
    }
  }
}

.activity-list {
  padding: 1.5rem;

  .activity-item {
    display: flex;
    align-items: flex-start;
    padding: 1rem;
    border-radius: 0.5rem;
    transition: background-color 0.3s ease;

    &:hover {
      background-color: #f8f9fa;
    }

    &:not(:last-child) {
      margin-bottom: 1rem;
    }

    .activity-icon {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-right: 1rem;
      flex-shrink: 0;

      &.bg-success-light {
        background-color: rgba(66, 184, 131, 0.1);
      }

      &.bg-info-light {
        background-color: rgba(33, 150, 243, 0.1);
      }

      &.bg-warning-light {
        background-color: rgba(255, 165, 2, 0.1);
      }

      i {
        font-size: 1.2rem;
      }
    }

    .activity-content {
      flex-grow: 1;

      h4 {
        font-size: 1rem;
        margin: 0 0 0.25rem;
        color: #2c3e50;
      }

      p {
        margin: 0;
        color: #666;
        font-size: 0.9rem;
      }

      .activity-time {
        font-size: 0.8rem;
        color: #999;
        display: block;
        margin-top: 0.25rem;
      }
    }
  }
}

.quick-actions {
  padding: 1.5rem;
  display: grid;
  gap: 1rem;

  .action-button {
    display: flex;
    align-items: center;
    padding: 1rem;
    border: none;
    background: #f8f9fa;
    border-radius: 0.5rem;
    color: #2c3e50;
    transition: all 0.3s ease;
    cursor: pointer;

    &:hover {
      background: #42b883;
      color: white;
      transform: translateX(5px);
    }

    i {
      font-size: 1.2rem;
      margin-right: 1rem;
    }

    span {
      font-weight: 500;
    }
  }
}

// Add router-link style to remove underline
.action-button.router-link-active,
.action-button {
  text-decoration: none;
}

@media (max-width: 768px) {
  .welcome-card {
    padding: 1.5rem;

    .decoration {
      display: none;
    }
  }

  .stat-card {
    padding: 1rem;
  }
}

// Skeleton Loading Styles
.skeleton-loading {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    transform: translateX(-100%);
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.2) 20%,
      rgba(255, 255, 255, 0.5) 60%,
      rgba(255, 255, 255, 0) 100%
    );
    animation: shimmer 2s infinite;
  }
}

@keyframes shimmer {
  100% {
    transform: translateX(100%);
  }
}

.skeleton-text {
  background: rgba(255, 255, 255, 0.2);
  border-radius: 4px;
  margin-bottom: 0.5rem;
  
  &.skeleton-title {
    height: 2.5rem;
    width: 60%;
  }
  
  &.skeleton-subtitle {
    height: 1.5rem;
    width: 80%;
  }
  
  &.skeleton-sm {
    height: 1rem;
    width: 40%;
  }
  
  &.skeleton-md {
    height: 1.5rem;
    width: 50%;
  }
  
  &.skeleton-lg {
    height: 2rem;
    width: 70%;
  }
}

.skeleton-badge {
  background: rgba(255, 255, 255, 0.2);
  border-radius: 2rem;
  height: 2rem;
  width: 120px;
}

.skeleton-icon {
  width: 48px;
  height: 48px;
  border-radius: 12px;
  background: rgba(66, 184, 131, 0.1);
  margin-bottom: 1rem;
}

.skeleton-activity-icon {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: rgba(66, 184, 131, 0.1);
  margin-right: 1rem;
  flex-shrink: 0;
}

.skeleton-button {
  width: 80px;
  height: 32px;
  border-radius: 4px;
  background: rgba(66, 184, 131, 0.1);
}

.skeleton-action-button {
  height: 48px;
  border-radius: 8px;
  background: rgba(66, 184, 131, 0.1);
  margin-bottom: 1rem;
  
  &:last-child {
    margin-bottom: 0;
  }
}

.welcome-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: 2rem;

  .user-info {
    flex: 1;
  }

  .avatar {
    width: 120px;
    height: 120px;
    background: rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
    border-radius: 25px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 4.2rem;
    font-weight: 50;
    color: white;
    border: 2px solid rgba(255, 255, 255, 0.3);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;

    &:hover {
      transform: scale(1.05);
    }
  }
}

@media (max-width: 768px) {
  .welcome-header {
    flex-direction: column-reverse;
    align-items: center;
    text-align: center;
    gap: 1.5rem;

    .avatar {
      width: 120px;
      height: 120px;
      font-size: 1.8rem;
    }

    .user-info {
      .role-badge,
      .change-password-btn {
        display: inline-flex;
        margin: 0.5rem;
      }
    }
  }
}

.change-password-btn {
  display: inline-flex;
  align-items: center;
  padding: 0.5rem 1.2rem;
  background: rgba(255, 255, 255, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.5);
  border-radius: 2rem;
  color: #ffffff;
  font-weight: 600;
  font-size: 0.95rem;
  cursor: pointer;
  transition: all 0.3s ease;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  box-shadow: 0 2px 8px rgba(255, 255, 255, 0.2);

  &:hover {
    background: rgba(255, 255, 255, 0.4);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(255, 255, 255, 0.3);
  }

  i {
    font-size: 1.1rem;
    filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.5));
  }
}

@keyframes pulse {
  0% {
    box-shadow: 0 2px 8px rgba(255, 255, 255, 0.2);
  }
  50% {
    box-shadow: 0 2px 12px rgba(255, 255, 255, 0.4);
  }
  100% {
    box-shadow: 0 2px 8px rgba(255, 255, 255, 0.2);
  }
}

.pulse {
  animation: pulse 2s infinite;
}
</style> 